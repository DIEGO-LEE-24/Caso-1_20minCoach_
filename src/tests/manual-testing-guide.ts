/**
 * üß™ GU√çA DE TESTING MANUAL PARA VOICE SEARCH
 * ===========================================
 *
 * Sigue esta gu√≠a paso a paso para validar que todo funciona antes del push
 */

console.log('üß™ INICIANDO TESTING MANUAL DE VOICE SEARCH');
console.log('===========================================');

// PASO 1: TESTING B√ÅSICO DE UI
console.log('\nüìã PASO 1: VERIFICACI√ìN DE UI');
console.log('1. ‚úÖ ¬øSe ve la p√°gina completa?');
console.log('2. ‚úÖ ¬øHay 23 coaches visibles?');
console.log('3. ‚úÖ ¬øEst√° el bot√≥n del micr√≥fono üéôÔ∏è?');
console.log('4. ‚úÖ ¬øEst√° el dropdown de especialidades?');
console.log('5. ‚úÖ ¬øEst√° el campo de b√∫squeda?');

// PASO 2: TESTING DE VOICE SEARCH
console.log('\nüé§ PASO 2: TESTING DE B√öSQUEDA POR VOZ');
console.log('Prueba estas frases exactas:');

const testPhrases = [
  {
    phrase: 'me siento estresado',
    expectedCoach: 'Mar√≠a Garc√≠a',
    expectedCategory: 'Psicolog√≠a Cl√≠nica',
  },
  {
    phrase: 'quiero bajar de peso',
    expectedCoach: 'Andrea Morales',
    expectedCategory: 'Nutrici√≥n y Diet√©tica',
  },
  {
    phrase: 'quiero hacer ejercicio',
    expectedCoach: 'Roberto D√≠az',
    expectedCategory: 'Entrenamiento Personal',
  },
  {
    phrase: 'quiero aprender a programar',
    expectedCoach: 'Luis Ram√≠rez',
    expectedCategory: 'Programaci√≥n Web',
  },
  {
    phrase: 'tengo problemas con mi pareja',
    expectedCoach: 'Luc√≠a Fern√°ndez',
    expectedCategory: 'Terapia de Pareja',
  },
];

testPhrases.forEach((test, index) => {
  console.log(`\n${index + 1}. üé§ Di: "${test.phrase}"`);
  console.log(`   ‚û°Ô∏è Debe filtrar a: ${test.expectedCoach}`);
  console.log(`   ‚û°Ô∏è Categor√≠a: ${test.expectedCategory}`);
  console.log('   ‚úÖ ¬øSe filtr√≥ correctamente?');
  console.log('   ‚úÖ ¬øSe seleccion√≥ la categor√≠a?');
});

// PASO 3: TESTING DE B√öSQUEDA MANUAL
console.log('\nüîç PASO 3: TESTING DE B√öSQUEDA MANUAL');
console.log('1. Selecciona "Psicolog√≠a Cl√≠nica" del dropdown');
console.log('2. Escribe "Mar√≠a" en el campo de b√∫squeda');
console.log('3. Presiona "Buscar"');
console.log('4. ‚úÖ ¬øSolo muestra a Mar√≠a Garc√≠a?');

console.log('\n5. Selecciona "Programaci√≥n Web" del dropdown');
console.log('6. Escribe "Luis" en el campo de b√∫squeda');
console.log('7. Presiona "Buscar"');
console.log('8. ‚úÖ ¬øSolo muestra a Luis Ram√≠rez?');

// PASO 4: TESTING DE ERRORES
console.log('\n‚ùå PASO 4: TESTING DE MANEJO DE ERRORES');
console.log('1. Deniega permisos de micr√≥fono');
console.log('2. ‚úÖ ¬øMuestra mensaje de error apropiado?');
console.log('3. Haz clic en el micr√≥fono sin hablar por 5 segundos');
console.log('4. ‚úÖ ¬øMuestra "No se detect√≥ ning√∫n sonido"?');

// PASO 5: TESTING DE PERFORMANCE
console.log('\n‚ö° PASO 5: TESTING DE PERFORMANCE');
console.log('1. ‚úÖ ¬øLa p√°gina carga en menos de 2 segundos?');
console.log('2. ‚úÖ ¬øEl voice search responde r√°pidamente?');
console.log('3. ‚úÖ ¬øEl filtrado es instant√°neo?');

// CHECKLIST FINAL
console.log('\nüìù CHECKLIST FINAL ANTES DEL PUSH:');
const finalChecklist = [
  'Voice search funciona con todas las frases de prueba',
  'Filtrado por categor√≠a funciona correctamente',
  'B√∫squeda manual dentro de categor√≠as funciona',
  'Manejo de errores es apropiado',
  'No hay errores en la consola del navegador',
  'Performance es aceptable',
  'UI se ve correctamente en diferentes tama√±os',
  'Todos los 23 coaches est√°n presentes',
  'Todas las especialidades est√°n en el dropdown',
];

finalChecklist.forEach((item, index) => {
  console.log(`${index + 1}. ‚úÖ ${item}`);
});

console.log('\nüöÄ SI TODOS LOS CHECKS EST√ÅN BIEN, ¬°LISTO PARA PUSH!');

// Funci√≥n helper para contar coaches
function countCoaches() {
  const coachCards =
    document.querySelectorAll('[data-coach-card]') ||
    document.querySelectorAll('.coach-card') ||
    document.querySelectorAll('[class*="coach"]');
  console.log(`üìä Coaches visibles: ${coachCards.length}`);
  return coachCards.length;
}

// Funci√≥n helper para verificar especialidades
function checkSpecialties() {
  const specialtySelect =
    document.querySelector('select') || document.querySelector('[data-specialty-select]');
  if (specialtySelect) {
    const options = specialtySelect.querySelectorAll('option');
    console.log(`üìä Especialidades disponibles: ${options.length - 1}`); // -1 por la opci√≥n "Todas"
    options.forEach((option, index) => {
      if (index > 0) {
        console.log(`   ${index}. ${option.textContent}`);
      }
    });
  }
}

// Exportar funciones helper
if (typeof window !== 'undefined') {
  window.countCoaches = countCoaches;
  window.checkSpecialties = checkSpecialties;
  console.log('\nüõ†Ô∏è Funciones helper disponibles:');
  console.log('   - countCoaches() - Cuenta coaches visibles');
  console.log('   - checkSpecialties() - Lista especialidades');
}
