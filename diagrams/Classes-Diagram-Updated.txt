## CASO #1 - COACHING PLATFORM
### COMPLETE CLASSES DIAGRAM (POST FASE 1 & 2)

```
┌─────────────────────────────────────────────────────────────────────────────────────┐
│                                DOMAIN MODELS                                        │
├─────────────────────────────────────────────────────────────────────────────────────┤
│  ┌─────────────────┐  ┌─────────────────┐  ┌─────────────────┐                     │
│  │      User       │  │      Coach      │  │     Session     │                     │
│  ├─────────────────┤  ├─────────────────┤  ├─────────────────┤                     │
│  │ +id: string     │  │ +id: string     │  │ +id: string     │                     │
│  │ +email: string  │  │ +name: string   │  │ +coachId: string│                     │
│  │ +name: string   │  │ +specialization │  │ +userId: string │                     │
│  │ +credits: number│  │ +hourlyRate: num│  │ +scheduledAt    │                     │
│  │ +createdAt: Date│  │ +rating: number │  │ +duration: num  │                     │
│  ├─────────────────┤  ├─────────────────┤  ├─────────────────┤                     │
│  │ +getFullName()  │  │ +isAvailable()  │  │ +book(): void   │                     │
│  │ +hasCredits()   │  │ +updateRating() │  │ +cancel(): void │                     │
│  │ +deductCredits()│  │                 │  │ +complete():void│                     │
│  └─────────────────┘  └─────────────────┘  └─────────────────┘                     │
└─────────────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────────────┐
│                            BUSINESS LAYER (FASE 1)                                 │
├─────────────────────────────────────────────────────────────────────────────────────┤
│  ┌─────────────────┐  ┌─────────────────┐                                           │
│  │  SessionRules   │  │   CoachRules    │                                           │
│  │ <<BusinessRule>>│  │ <<BusinessRule>>│                                           │
│  ├─────────────────┤  ├─────────────────┤                                           │
│  │ +canBookSession │  │ +canUpdateProfile│                                          │
│  │ +calculatePrice │  │ +validateSpec   │                                           │
│  │ +validateTime   │  │ +checkRating    │                                           │
│  │ +checkAvailabil │  │                 │                                           │
│  └─────────────────┘  └─────────────────┘                                           │
│                                                                                       │
│  ┌─────────────────┐  ┌─────────────────┐                                           │
│  │BookSessionUseCase│ │SearchCoachUseCase│                                          │
│  │   <<UseCase>>   │  │   <<UseCase>>   │                                           │
│  ├─────────────────┤  ├─────────────────┤                                           │
│  │ -sessionRules   │  │ -coachRules     │                                           │
│  │ -sessionService │  │ -coachService   │                                           │
│  │ -eventBus       │  │                 │                                           │
│  ├─────────────────┤  ├─────────────────┤                                           │
│  │ +execute(dto)   │  │ +execute(dto)   │                                           │
│  │ -validateInput  │  │ -buildCriteria  │                                           │
│  │ -applyRules     │  │ -filterResults  │                                           │
│  │ -persistSession │  │                 │                                           │
│  └─────────────────┘  └─────────────────┘                                           │
└─────────────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────────────┐
│                          DTOs & VALIDATORS (FASE 1)                                │
├─────────────────────────────────────────────────────────────────────────────────────┤
│  ┌─────────────────┐  ┌─────────────────┐                                           │
│  │CreateSessionDTO │  │ SearchCoachDTO  │                                           │
│  ├─────────────────┤  ├─────────────────┤                                           │
│  │ +coachId: string│  │ +specialization │                                           │
│  │ +userId: string │  │ +minRating: num │                                           │
│  │ +scheduledAt    │  │ +maxHourlyRate  │                                           │
│  │ +duration: num  │  │ +availability   │                                           │
│  │ +notes?: string │  │ +location?:string│                                          │
│  ├─────────────────┤  ├─────────────────┤                                           │
│  │ +validate()     │  │ +validate()     │                                           │
│  └─────────────────┘  └─────────────────┘                                           │
│                                                                                       │
│  ┌─────────────────────────────────────────────────────────────────────────────────┐ │
│  │                     VALIDATORS (Strategy Pattern)                               │ │
│  │                                                                                 │ │
│  │  ┌─────────────────┐  ┌─────────────────┐  ┌─────────────────┐                 │ │
│  │  │ BaseValidator<T>│  │CreateSessionVal │  │SearchCoachValid │                 │ │
│  │  │  <<interface>>  │  │                 │  │                 │                 │ │
│  │  ├─────────────────┤  ├─────────────────┤  ├─────────────────┤                 │ │
│  │  │ +validate(data) │  │ +validate(dto)  │  │ +validate(dto)  │                 │ │
│  │  │   :ValidationRes│  │ -validateCoachId│  │ -validateRating │                 │ │
│  │  │                 │  │ -validateDateTime│ │ -validatePrice  │                 │ │
│  │  │                 │  │ -validateDuration│ │                 │                 │ │
│  │  └─────────────────┘  └─────────────────┘  └─────────────────┘                 │ │
│  │           ▲                     ▲                     ▲                       │ │
│  │           │                     │                     │                       │ │
│  │           └─────────────────────┴─────────────────────┘                       │ │
│  └─────────────────────────────────────────────────────────────────────────────────┘ │
└─────────────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────────────┐
│                       TRANSFORMERS (Factory Pattern)                               │
├─────────────────────────────────────────────────────────────────────────────────────┤
│  ┌─────────────────────────────────────────────────────────────────────────────────┐ │
│  │                         TransformerFactory                                     │ │
│  │  ┌─────────────────┐  ┌─────────────────┐  ┌─────────────────┐                 │ │
│  │  │+createCoachTrans│  │+createSessionTr │  │+createUserTrans │                 │ │
│  │  │  former()       │  │  ansformer()    │  │  former()       │                 │ │
│  │  └─────────────────┘  └─────────────────┘  └─────────────────┘                 │ │
│  │           │                     │                     │                       │ │
│  │           ▼                     ▼                     ▼                       │ │
│  │  ┌─────────────────┐  ┌─────────────────┐  ┌─────────────────┐                 │ │
│  │  │ CoachTransformer│  │SessionTransform │  │ UserTransformer │                 │ │
│  │  ├─────────────────┤  ├─────────────────┤  ├─────────────────┤                 │ │
│  │  │ +toDTO(coach)   │  │ +toDTO(session) │  │ +toDTO(user)    │                 │ │
│  │  │ +fromDTO(dto)   │  │ +fromDTO(dto)   │  │ +fromDTO(dto)   │                 │ │
│  │  │ +toListItem()   │  │ +toCalendar()   │  │ +toProfile()    │                 │ │
│  │  └─────────────────┘  └─────────────────┘  └─────────────────┘                 │ │
│  └─────────────────────────────────────────────────────────────────────────────────┘ │
└─────────────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────────────┐
│                  BACKGROUND JOBS & EVENT SYSTEM (FASE 2)                           │
├─────────────────────────────────────────────────────────────────────────────────────┤
│  ┌─────────────────────────────────────────────────────────────────────────────────┐ │
│  │                         EventBus (Singleton Pattern)                           │ │
│  │  ┌─────────────────────────────────────────────────────────────────────────┐   │ │
│  │  │ -instance: EventBus                                                     │   │ │
│  │  │ -listeners: Map<string, Function[]>                                     │   │ │
│  │  │ -eventHistory: EventRecord[]                                            │   │ │
│  │  ├─────────────────────────────────────────────────────────────────────────┤   │ │
│  │  │ +getInstance(): EventBus                                                │   │ │
│  │  │ +subscribe(eventType: string, callback: Function): void                 │   │ │
│  │  │ +unsubscribe(eventType: string, callback: Function): void               │   │ │
│  │  │ +publish(eventType: string, data: any): void                            │   │ │
│  │  │ +getEventHistory(): EventRecord[]                                       │   │ │
│  │  └─────────────────────────────────────────────────────────────────────────┘   │ │
│  └─────────────────────────────────────────────────────────────────────────────────┘ │
│                                        │                                             │
│                         ┌──────────────┼──────────────┐                             │
│                         ▼              ▼              ▼                             │
│  ┌─────────────────┐  ┌─────────────────┐  ┌─────────────────┐                     │
│  │NotificationSvc  │  │ SessionListener │  │  CoachListener  │                     │
│  │  (Singleton)    │  │   (Observer)    │  │   (Observer)    │                     │
│  ├─────────────────┤  ├─────────────────┤  ├─────────────────┤                     │
│  │ -instance: NS   │  │ +onSessionBooked│  │ +onCoachRegist  │                     │
│  │ -emailTemplates │  │ +onSessionCancel│  │ +onProfileUpd   │                     │
│  ├─────────────────┤  │ +onSessionCompl │  │ +onAvailChange  │                     │
│  │ +getInstance()  │  │                 │  │                 │                     │
│  │ +sendEmail()    │  │                 │  │                 │                     │
│  │ +sendPushNotif()│  │                 │  │                 │                     │
│  │ +scheduleNotif()│  │                 │  │                 │                     │
│  └─────────────────┘  └─────────────────┘  └─────────────────┘                     │
└─────────────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────────────┐
│                         UTILITIES LAYER (FASE 2)                                   │
├─────────────────────────────────────────────────────────────────────────────────────┤
│  ┌─────────────────┐  ┌─────────────────────────────────────────────────────────┐   │
│  │  ConfigManager  │  │            CacheManager (Strategy Pattern)             │   │
│  │   (Singleton)   │  ├─────────────────────────────────────────────────────────┤   │
│  ├─────────────────┤  │ -strategy: CacheStrategy                                │   │
│  │ -instance: CM   │  ├─────────────────────────────────────────────────────────┤   │
│  │ -config: Map    │  │ +setStrategy(strategy: CacheStrategy): void             │   │
│  ├─────────────────┤  │ +get(key: string): any                                  │   │
│  │ +getInstance()  │  │ +set(key: string, value: any, ttl?: number): void       │   │
│  │ +get(key: str)  │  │ +delete(key: string): void                              │   │
│  │ +set(key, val)  │  │ +clear(): void                                          │   │
│  │ +loadFromEnv()  │  └─────────────────────────────────────────────────────────┘   │
│  │ +getApiKey()    │                               │                               │
│  └─────────────────┘                               ▼                               │
│                      ┌─────────────────────────────────────────────────────────┐   │
│                      │              CacheStrategy (Interface)                 │   │
│                      ├─────────────────────────────────────────────────────────┤   │
│                      │ +get(key: string): any                                  │   │
│                      │ +set(key: string, value: any, ttl?: number): void       │   │
│                      │ +delete(key: string): void                              │   │
│                      │ +clear(): void                                          │   │
│                      └─────────────────────────────────────────────────────────┘   │
│                                       ▲         ▲                                  │
│                          ┌────────────┘         └────────────┐                     │
│  ┌─────────────────┐  ┌─────────────────┐  ┌─────────────────┐                     │
│  │ MemoryCacheStrat│  │PersistentCacheS │  │                 │                     │
│  ├─────────────────┤  ├─────────────────┤  │                 │                     │
│  │ -cache: Map     │  │ -storage: Storage│  │                 │                     │
│  ├─────────────────┤  ├─────────────────┤  │                 │                     │
│  │ +get(), +set()  │  │ +get(), +set()  │  │                 │                     │
│  │ +delete(), +clea│  │ +delete(), +clea│  │                 │                     │
│  └─────────────────┘  └─────────────────┘  └─────────────────┘                     │
│                                                                                       │
│  ┌─────────────────┐  ┌─────────────────┐  ┌─────────────────┐  ┌─────────────────┐ │
│  │  DateFormatter  │  │ StringFormatter │  │ NumberFormatter │  │ ValidationUtils │ │
│  ├─────────────────┤  ├─────────────────┤  ├─────────────────┤  ├─────────────────┤ │
│  │ +formatDate()   │  │ +capitalize()   │  │ +formatCurrency │  │ +isEmail()      │ │
│  │ +parseDate()    │  │ +slugify()      │  │ +formatPercent()│  │ +isPhone()      │ │
│  │ +getRelativeTime│  │ +truncate()     │  │ +formatFileSize │  │ +isUrl()        │ │
│  │ +formatDuration │  │ +formatPhone()  │  │ +roundToDecimal │  │ +isStrongPass() │ │
│  │ +isValidDate()  │  │ +sanitize()     │  │                 │  │ +validateCC()   │ │
│  └─────────────────┘  └─────────────────┘  └─────────────────┘  └─────────────────┘ │
└─────────────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────────────┐
│                              SERVICES LAYER                                        │
├─────────────────────────────────────────────────────────────────────────────────────┤
│  ┌─────────────────┐  ┌─────────────────┐  ┌─────────────────┐                     │
│  │ PaymentService  │  │ SessionService  │  │    CoachAPI     │                     │
│  ├─────────────────┤  ├─────────────────┤  ├─────────────────┤                     │
│  │ -stripeClient   │  │ -sessionRepo    │  │ -supabaseClient │                     │
│  ├─────────────────┤  │ -eventBus       │  ├─────────────────┤                     │
│  │ +processPayment │  ├─────────────────┤  │ +searchCoaches()│                     │
│  │ +refundPayment  │  │ +createSession()│  │ +getCoachById() │                     │
│  │ +getPayHistory  │  │ +cancelSession()│  │ +updateProfile()│                     │
│  └─────────────────┘  │ +getUpcoming()  │  └─────────────────┘                     │
│                       └─────────────────┘                                          │
└─────────────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────────────┐
│                         INFRASTRUCTURE LAYER                                       │
├─────────────────────────────────────────────────────────────────────────────────────┤
│  ┌─────────────────┐  ┌─────────────────┐  ┌─────────────────┐  ┌─────────────────┐ │
│  │ CustomError     │  │  ErrorHandler   │  │     Logger      │  │   React Hooks   │ │
│  ├─────────────────┤  ├─────────────────┤  ├─────────────────┤  ├─────────────────┤ │
│  │ +code: string   │  │ +handleError()  │  │ +log()          │  │    useAuth      │ │
│  │ +message: str   │  │ +logError()     │  │ +error()        │  │ +user: User     │ │
│  │ +details?: any  │  │ +notifyError()  │  │ +warn()         │  │ +isLoading      │ │
│  │ +timestamp: Date│  │ +formatError()  │  │ +info()         │  │ +login()        │ │
│  └─────────────────┘  └─────────────────┘  └─────────────────┘  │ +logout()       │ │
│                                                                 │ +register()     │ │
│                                                                 ├─────────────────┤ │
│                                                                 │ useCoachSearch  │ │
│                                                                 │ +coaches: Coach[]│ │
│                                                                 │ +isLoading: bool│ │
│                                                                 │ +search()       │ │
│                                                                 │ +clearResults() │ │
│                                                                 └─────────────────┘ │
└─────────────────────────────────────────────────────────────────────────────────────┘

═══════════════════════════════════════════════════════════════════════════════════════
                              DESIGN PATTERNS LEGEND
═══════════════════════════════════════════════────════════════════════════════════════

🔹 SINGLETON PATTERN
   • EventBus: Single instance for global event management
   • NotificationService: Single instance for all notifications
   • ConfigManager: Single instance for application configuration
   • CacheManager: Single instance for cache coordination

🔹 STRATEGY PATTERN
   • BaseValidator: Interface for different validation strategies
   • CacheStrategy: Interface for different caching strategies
   • MemoryCacheStrategy & PersistentCacheStrategy: Concrete implementations

🔹 OBSERVER PATTERN
   • EventBus: Subject that notifies observers
   • SessionListener & CoachListener: Observers that react to events
   • NotificationService: Observer that handles notification events

🔹 FACTORY PATTERN
   • TransformerFactory: Creates appropriate transformers
   • CoachTransformer & SessionTransformer: Products created by factory

🔹 COMMAND PATTERN
   • BookSessionUseCase & SearchCoachUseCase: Encapsulate operations
   • Commands can be queued, logged, and undone

🔹 BUILDER PATTERN
   • CreateSessionDTO & SearchCoachDTO: Build complex objects step by step

🔹 FACADE PATTERN
   • SessionService & CoachAPI: Simplified interfaces to complex subsystems

🔹 REPOSITORY PATTERN
   • Abstract data access through interfaces
   • Separates business logic from data persistence

🔹 DECORATOR PATTERN
   • LoggingDecorator: Adds logging to existing functionality
   • CacheDecorator: Adds caching behavior

🔹 COMPOSITE PATTERN
   • ValidationComposite: Treats individual and group validations uniformly

═══════════════════════════════════════════════════════════════════════════════════════
                                   KEY RELATIONSHIPS
═══════════════════════════════════════════════════════════════════════════════════════

User 1──────* Session *──────1 Coach
                │
                │
         ┌──────▼──────┐
         │ EventBus    │ ◄─── BusinessLayer (publishes events)
         │ (Singleton) │
         └──────┬──────┘
                │
        ┌───────┼───────┐
        ▼       ▼       ▼
   SessionList CoachList NotificationSvc
   (Observer) (Observer)  (Observer)

BusinessLayer ──uses──► Utilities (ConfigManager, CacheManager, Formatters)
Components    ──uses──► Hooks (useAuth, useCoachSearch, useTheme)
Services      ──uses──► EventBus (publishes events)
API Layer     ──uses──► Database (Supabase)

═══════════════════════════════════════════════════════════════════════════════════════
```